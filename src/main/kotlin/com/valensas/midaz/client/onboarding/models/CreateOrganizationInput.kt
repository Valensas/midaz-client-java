/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.midaz.client.onboarding.models

import com.midaz.client.onboarding.models.Address
import com.midaz.client.onboarding.models.Status

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Request payload for creating a new organization. Contains all the necessary fields for organization creation, with required fields marked as such. Organizations are the top-level entities in the hierarchy and contain ledgers, which in turn contain accounts and assets.
 *
 * @param legalDocument Official tax ID, company registration number, or other legal identification required: true example: 123456789012345 maxLength: 256
 * @param legalName Official legal name of the organization required: true example: Lerian Financial Services Ltd. maxLength: 256
 * @param address Physical address of the organization required: false
 * @param doingBusinessAs Trading or brand name of the organization, if different from legal name required: false example: Lerian FS maxLength: 256
 * @param metadata Custom key-value pairs for extending the organization information required: false example: {\"industry\": \"Financial Services\", \"founded\": 2020, \"employees\": 150}
 * @param parentOrganizationId UUID of the parent organization if this is a child organization required: false format: uuid
 * @param status Current operating status of the organization (defaults to ACTIVE if not specified) required: false
 */


data class CreateOrganizationInput (

    /* Official tax ID, company registration number, or other legal identification required: true example: 123456789012345 maxLength: 256 */
    @get:JsonProperty("legalDocument")
    val legalDocument: kotlin.String,

    /* Official legal name of the organization required: true example: Lerian Financial Services Ltd. maxLength: 256 */
    @get:JsonProperty("legalName")
    val legalName: kotlin.String,

    /* Physical address of the organization required: false */
    @get:JsonProperty("address")
    val address: Address? = null,

    /* Trading or brand name of the organization, if different from legal name required: false example: Lerian FS maxLength: 256 */
    @get:JsonProperty("doingBusinessAs")
    val doingBusinessAs: kotlin.String? = null,

    /* Custom key-value pairs for extending the organization information required: false example: {\"industry\": \"Financial Services\", \"founded\": 2020, \"employees\": 150} */
    @get:JsonProperty("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* UUID of the parent organization if this is a child organization required: false format: uuid */
    @get:JsonProperty("parentOrganizationId")
    val parentOrganizationId: java.util.UUID? = null,

    /* Current operating status of the organization (defaults to ACTIVE if not specified) required: false */
    @get:JsonProperty("status")
    val status: Status? = null

) {


}

