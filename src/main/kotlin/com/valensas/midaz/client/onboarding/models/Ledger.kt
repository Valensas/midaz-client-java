/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.midaz.client.onboarding.models

import com.midaz.client.onboarding.models.Status

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Complete ledger entity containing all fields including system-generated fields like ID, creation timestamps, and metadata. This is the response format for ledger operations. Ledgers are organizational units within an organization that group related financial accounts and assets together.
 *
 * @param createdAt Timestamp when the ledger was created (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time
 * @param deletedAt Timestamp when the ledger was soft deleted, null if not deleted (RFC3339 format) example: null format: date-time
 * @param id Unique identifier for the ledger (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param metadata Custom key-value pairs for extending the ledger information example: {\"department\": \"Finance\", \"currency\": \"USD\", \"region\": \"North America\"}
 * @param name Display name of the ledger example: Treasury Operations maxLength: 256
 * @param organizationId Reference to the organization that owns this ledger (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param status Current operating status of the ledger
 * @param updatedAt Timestamp when the ledger was last updated (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time
 */


data class Ledger (

    /* Timestamp when the ledger was created (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("createdAt")
    val createdAt: java.time.OffsetDateTime? = null,

    /* Timestamp when the ledger was soft deleted, null if not deleted (RFC3339 format) example: null format: date-time */
    @get:JsonProperty("deletedAt")
    val deletedAt: java.time.OffsetDateTime? = null,

    /* Unique identifier for the ledger (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* Custom key-value pairs for extending the ledger information example: {\"department\": \"Finance\", \"currency\": \"USD\", \"region\": \"North America\"} */
    @get:JsonProperty("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Display name of the ledger example: Treasury Operations maxLength: 256 */
    @get:JsonProperty("name")
    val name: kotlin.String? = null,

    /* Reference to the organization that owns this ledger (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("organizationId")
    val organizationId: java.util.UUID? = null,

    /* Current operating status of the ledger */
    @get:JsonProperty("status")
    val status: Status? = null,

    /* Timestamp when the ledger was last updated (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("updatedAt")
    val updatedAt: java.time.OffsetDateTime? = null

) {


}

