/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.midaz.client.onboarding.models

import com.midaz.client.onboarding.models.Status

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Complete account entity containing all fields including system-generated fields like ID, creation timestamps, and metadata. This is the response format for account operations. Accounts represent individual financial entities (bank accounts, cards, expense categories, etc.) within a ledger and are the primary structures for tracking balances and transactions.
 *
 * @param alias Unique alias for the account (makes referencing easier) example: @treasury_checking maxLength: 100
 * @param assetCode Asset code associated with this account (determines currency/asset type) example: USD maxLength: 100
 * @param createdAt Timestamp when the account was created (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time
 * @param deletedAt Timestamp when the account was soft deleted, null if not deleted (RFC3339 format) example: null format: date-time
 * @param entityId Optional external identifier for linking to external systems example: EXT-ACC-12345 maxLength: 256
 * @param id Unique identifier for the account (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param ledgerId ID of the ledger this account belongs to (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param metadata Custom key-value pairs for extending the account information example: {\"department\": \"Treasury\", \"purpose\": \"Operating Expenses\", \"region\": \"Global\"}
 * @param name Human-readable name of the account example: Corporate Checking Account maxLength: 256
 * @param organizationId ID of the organization that owns this account (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param parentAccountId ID of the parent account if this is a sub-account (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param portfolioId ID of the portfolio this account belongs to (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param segmentId ID of the segment this account belongs to (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param status Current operating status of the account
 * @param type Type of the account. example: deposit
 * @param updatedAt Timestamp when the account was last updated (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time
 */


data class Account (

    /* Unique alias for the account (makes referencing easier) example: @treasury_checking maxLength: 100 */
    @get:JsonProperty("alias")
    val alias: kotlin.String? = null,

    /* Asset code associated with this account (determines currency/asset type) example: USD maxLength: 100 */
    @get:JsonProperty("assetCode")
    val assetCode: kotlin.String? = null,

    /* Timestamp when the account was created (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("createdAt")
    val createdAt: java.time.OffsetDateTime? = null,

    /* Timestamp when the account was soft deleted, null if not deleted (RFC3339 format) example: null format: date-time */
    @get:JsonProperty("deletedAt")
    val deletedAt: java.time.OffsetDateTime? = null,

    /* Optional external identifier for linking to external systems example: EXT-ACC-12345 maxLength: 256 */
    @get:JsonProperty("entityId")
    val entityId: kotlin.String? = null,

    /* Unique identifier for the account (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* ID of the ledger this account belongs to (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("ledgerId")
    val ledgerId: java.util.UUID? = null,

    /* Custom key-value pairs for extending the account information example: {\"department\": \"Treasury\", \"purpose\": \"Operating Expenses\", \"region\": \"Global\"} */
    @get:JsonProperty("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Human-readable name of the account example: Corporate Checking Account maxLength: 256 */
    @get:JsonProperty("name")
    val name: kotlin.String? = null,

    /* ID of the organization that owns this account (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("organizationId")
    val organizationId: java.util.UUID? = null,

    /* ID of the parent account if this is a sub-account (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("parentAccountId")
    val parentAccountId: java.util.UUID? = null,

    /* ID of the portfolio this account belongs to (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("portfolioId")
    val portfolioId: java.util.UUID? = null,

    /* ID of the segment this account belongs to (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("segmentId")
    val segmentId: java.util.UUID? = null,

    /* Current operating status of the account */
    @get:JsonProperty("status")
    val status: Status? = null,

    /* Type of the account. example: deposit */
    @get:JsonProperty("type")
    val type: kotlin.String? = null,

    /* Timestamp when the account was last updated (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("updatedAt")
    val updatedAt: java.time.OffsetDateTime? = null

) {


}

