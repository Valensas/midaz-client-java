/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.midaz.client.onboarding.models

import com.midaz.client.onboarding.models.Status

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Request payload for creating a new account within a ledger. Accounts represent individual financial entities such as bank accounts, credit cards, expense categories, or any other financial buckets within a ledger. Accounts are identified by a unique ID, can have aliases for easy reference, and are associated with a specific asset type.
 *
 * @param assetCode Asset code that this account will use for balances and transactions required: true example: USD maxLength: 100
 * @param type Type of the account required: true example: deposit maxLength: 256
 * @param alias Unique alias for the account (optional, must follow alias format rules) required: false example: @treasury_checking maxLength: 100
 * @param entityId Optional external identifier for linking to external systems required: false example: EXT-ACC-12345 maxLength: 256
 * @param metadata Custom key-value pairs for extending the account information required: false example: {\"department\": \"Treasury\", \"purpose\": \"Operating Expenses\", \"region\": \"Global\"}
 * @param name Human-readable name of the account required: false example: Corporate Checking Account maxLength: 256
 * @param parentAccountId ID of the parent account if this is a subaccount (optional) required: false format: uuid
 * @param portfolioId ID of the portfolio this account belongs to (optional) required: false format: uuid
 * @param segmentId ID of the segment this account belongs to (optional) required: false format: uuid
 * @param status Current operating status of the account required: false
 */


data class CreateAccountInput (

    /* Asset code that this account will use for balances and transactions required: true example: USD maxLength: 100 */
    @get:JsonProperty("assetCode")
    val assetCode: kotlin.String,

    /* Type of the account required: true example: deposit maxLength: 256 */
    @get:JsonProperty("type")
    val type: kotlin.String,

    /* Unique alias for the account (optional, must follow alias format rules) required: false example: @treasury_checking maxLength: 100 */
    @get:JsonProperty("alias")
    val alias: kotlin.String? = null,

    /* Optional external identifier for linking to external systems required: false example: EXT-ACC-12345 maxLength: 256 */
    @get:JsonProperty("entityId")
    val entityId: kotlin.String? = null,

    /* Custom key-value pairs for extending the account information required: false example: {\"department\": \"Treasury\", \"purpose\": \"Operating Expenses\", \"region\": \"Global\"} */
    @get:JsonProperty("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Human-readable name of the account required: false example: Corporate Checking Account maxLength: 256 */
    @get:JsonProperty("name")
    val name: kotlin.String? = null,

    /* ID of the parent account if this is a subaccount (optional) required: false format: uuid */
    @get:JsonProperty("parentAccountId")
    val parentAccountId: java.util.UUID? = null,

    /* ID of the portfolio this account belongs to (optional) required: false format: uuid */
    @get:JsonProperty("portfolioId")
    val portfolioId: java.util.UUID? = null,

    /* ID of the segment this account belongs to (optional) required: false format: uuid */
    @get:JsonProperty("segmentId")
    val segmentId: java.util.UUID? = null,

    /* Current operating status of the account required: false */
    @get:JsonProperty("status")
    val status: Status? = null

) {


}

