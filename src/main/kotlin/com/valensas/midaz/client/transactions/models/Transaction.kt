/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.midaz.client.transactions.models

import com.midaz.client.transactions.models.Operation
import com.midaz.client.transactions.models.Status

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Transaction is a struct designed to store transaction data. Represents a financial transaction that consists of multiple operations affecting account balances, including details about the transaction's status, amounts, and related operations.
 *
 * @param amount Transaction amount value in the smallest unit of the asset example: 1500 minimum: 0
 * @param assetCode Asset code for the transaction example: BRL minLength: 2 maxLength: 10
 * @param chartOfAccountsGroupName Chart of accounts group name for accounting purposes example: Chart of accounts group name maxLength: 256
 * @param createdAt Timestamp when the transaction was created example: 2021-01-01T00:00:00Z format: date-time
 * @param deletedAt Timestamp when the transaction was deleted (if soft-deleted) example: 2021-01-01T00:00:00Z format: date-time
 * @param description Human-readable description of the transaction example: Transaction description maxLength: 256
 * @param destination List of destination account aliases or identifiers example: [\"@person2\"]
 * @param id Unique identifier for the transaction example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param ledgerId Ledger identifier example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param metadata Additional custom attributes example: {\"purpose\": \"Monthly payment\", \"category\": \"Utility\"}
 * @param operations List of operations associated with this transaction
 * @param organizationId Organization identifier example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param parentTransactionId Parent transaction identifier (for reversals or child transactions) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param route Route example: 00000000-0000-0000-0000-000000000000 format: string
 * @param source List of source account aliases or identifiers example: [\"@person1\"]
 * @param status Transaction status information
 * @param updatedAt Timestamp when the transaction was last updated example: 2021-01-01T00:00:00Z format: date-time
 */


data class Transaction (

    /* Transaction amount value in the smallest unit of the asset example: 1500 minimum: 0 */
    @get:JsonProperty("amount")
    val amount: java.math.BigDecimal? = null,

    /* Asset code for the transaction example: BRL minLength: 2 maxLength: 10 */
    @get:JsonProperty("assetCode")
    val assetCode: kotlin.String? = null,

    /* Chart of accounts group name for accounting purposes example: Chart of accounts group name maxLength: 256 */
    @get:JsonProperty("chartOfAccountsGroupName")
    val chartOfAccountsGroupName: kotlin.String? = null,

    /* Timestamp when the transaction was created example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("createdAt")
    val createdAt: java.time.OffsetDateTime? = null,

    /* Timestamp when the transaction was deleted (if soft-deleted) example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("deletedAt")
    val deletedAt: java.time.OffsetDateTime? = null,

    /* Human-readable description of the transaction example: Transaction description maxLength: 256 */
    @get:JsonProperty("description")
    val description: kotlin.String? = null,

    /* List of destination account aliases or identifiers example: [\"@person2\"] */
    @get:JsonProperty("destination")
    val destination: kotlin.collections.List<kotlin.String>? = null,

    /* Unique identifier for the transaction example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* Ledger identifier example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("ledgerId")
    val ledgerId: java.util.UUID? = null,

    /* Additional custom attributes example: {\"purpose\": \"Monthly payment\", \"category\": \"Utility\"} */
    @get:JsonProperty("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* List of operations associated with this transaction */
    @get:JsonProperty("operations")
    val operations: kotlin.collections.List<Operation>? = null,

    /* Organization identifier example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("organizationId")
    val organizationId: java.util.UUID? = null,

    /* Parent transaction identifier (for reversals or child transactions) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("parentTransactionId")
    val parentTransactionId: java.util.UUID? = null,

    /* Route example: 00000000-0000-0000-0000-000000000000 format: string */
    @get:JsonProperty("route")
    val route: kotlin.String? = null,

    /* List of source account aliases or identifiers example: [\"@person1\"] */
    @get:JsonProperty("source")
    val source: kotlin.collections.List<kotlin.String>? = null,

    /* Transaction status information */
    @get:JsonProperty("status")
    val status: Status? = null,

    /* Timestamp when the transaction was last updated example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("updatedAt")
    val updatedAt: java.time.OffsetDateTime? = null

) {


}

