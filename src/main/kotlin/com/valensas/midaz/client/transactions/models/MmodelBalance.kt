/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.midaz.client.transactions.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Complete balance entity containing all fields including system-generated fields like ID, creation timestamps, and metadata. This is the response format for balance operations. Balances represent the amount of a specific asset held in an account, including available and on-hold amounts.
 *
 * @param accountId Account that holds this balance example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param accountType Type of account holding this balance example: creditCard maxLength: 50
 * @param alias Alias for the account, used for easy identification or tagging example: @person1 maxLength: 256
 * @param allowReceiving Whether the account can receive funds to this balance example: true
 * @param allowSending Whether the account can send funds from this balance example: true
 * @param assetCode Asset code identifying the currency or asset type of this balance example: USD minLength: 2 maxLength: 10
 * @param available Amount available for transactions (in the smallest unit of the asset, e.g. cents) example: 1500 minimum: 0
 * @param createdAt Timestamp when the balance was created (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time
 * @param deletedAt Timestamp when the balance was softly deleted, null if not deleted (RFC3339 format) example: null format: date-time
 * @param id Unique identifier for the balance (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param ledgerId Ledger containing the account this balance belongs to example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param metadata Custom key-value pairs for extending the balance information example: {\"purpose\": \"Main savings\", \"category\": \"Personal\"}
 * @param onHold Amount currently on hold and unavailable for transactions example: 500 minimum: 0
 * @param organizationId Organization that owns this balance example: 00000000-0000-0000-0000-000000000000 format: uuid
 * @param updatedAt Timestamp when the balance was last updated (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time
 * @param version Optimistic concurrency control version example: 1 minimum: 1
 */


data class MmodelBalance (

    /* Account that holds this balance example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("accountId")
    val accountId: java.util.UUID? = null,

    /* Type of account holding this balance example: creditCard maxLength: 50 */
    @get:JsonProperty("accountType")
    val accountType: kotlin.String? = null,

    /* Alias for the account, used for easy identification or tagging example: @person1 maxLength: 256 */
    @get:JsonProperty("alias")
    val alias: kotlin.String? = null,

    /* Whether the account can receive funds to this balance example: true */
    @get:JsonProperty("allowReceiving")
    val allowReceiving: kotlin.Boolean? = null,

    /* Whether the account can send funds from this balance example: true */
    @get:JsonProperty("allowSending")
    val allowSending: kotlin.Boolean? = null,

    /* Asset code identifying the currency or asset type of this balance example: USD minLength: 2 maxLength: 10 */
    @get:JsonProperty("assetCode")
    val assetCode: kotlin.String? = null,

    /* Amount available for transactions (in the smallest unit of the asset, e.g. cents) example: 1500 minimum: 0 */
    @get:JsonProperty("available")
    val available: java.math.BigDecimal? = null,

    /* Timestamp when the balance was created (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("createdAt")
    val createdAt: java.time.OffsetDateTime? = null,

    /* Timestamp when the balance was softly deleted, null if not deleted (RFC3339 format) example: null format: date-time */
    @get:JsonProperty("deletedAt")
    val deletedAt: java.time.OffsetDateTime? = null,

    /* Unique identifier for the balance (UUID format) example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* Ledger containing the account this balance belongs to example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("ledgerId")
    val ledgerId: java.util.UUID? = null,

    /* Custom key-value pairs for extending the balance information example: {\"purpose\": \"Main savings\", \"category\": \"Personal\"} */
    @get:JsonProperty("metadata")
    val metadata: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Amount currently on hold and unavailable for transactions example: 500 minimum: 0 */
    @get:JsonProperty("onHold")
    val onHold: java.math.BigDecimal? = null,

    /* Organization that owns this balance example: 00000000-0000-0000-0000-000000000000 format: uuid */
    @get:JsonProperty("organizationId")
    val organizationId: java.util.UUID? = null,

    /* Timestamp when the balance was last updated (RFC3339 format) example: 2021-01-01T00:00:00Z format: date-time */
    @get:JsonProperty("updatedAt")
    val updatedAt: java.time.OffsetDateTime? = null,

    /* Optimistic concurrency control version example: 1 minimum: 1 */
    @get:JsonProperty("version")
    val version: kotlin.Int? = null

) {


}

